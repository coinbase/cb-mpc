name: CI
on:
  push:
    branches:
      - master
    paths-ignore:
      - "**/*.md"
      - "dev/**"
      - "docs/**"
      - ".gitignore"
  pull_request:
    paths-ignore:
      - "**/*.md"
      - "dev/**"
      - "docs/**"
      - ".gitignore"
permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - run: |-
          echo "Run tests"
          make submodules
          make image
          docker run --rm -v $(pwd):/code -t cb-mpc bash -c 'make lint && make full-test'
  lib-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - run: |-
          echo "Test on installed library"
          make submodules
          make image
          docker run --rm -v "$(pwd)":/code -t cb-mpc bash -lc '
            set -euo pipefail
            cd /code
            # Never re-touch submodules inside the container; avoids git safe.directory pain.
            # If you insist on touching git here, you MUST first: git config --global --add safe.directory /code
            if ! command -v go >/dev/null 2>&1; then
              apt-get update
              apt-get install -y --no-install-recommends ca-certificates curl git
              GO_VERSION="${GO_VERSION:-1.22.7}"
              curl -fsSL "https://go.dev/dl/go${GO_VERSION}.linux-amd64.tar.gz" \
                | tar -C /usr/local -xz
              ln -sf /usr/local/go/bin/* /usr/local/bin/
            fi
            export PATH="/usr/local/go/bin:$PATH"
            export GOTOOLCHAIN=auto
            go version
            export CGO_ENABLED=1
            make build
            make install
            make benchmark-build
            # Run demos (Go + C++) with cgo on
            BUILD_TYPE=${BUILD_TYPE:-Release} bash scripts/run-demos.sh --run-all
            make test-go
            make test-go-race
          '